Day 5:
52. [Interactive Coding Exercise] High Score - Wyszukiwanie najwiekszej wartości z listy za pomocą pętli

Day 7:
71. Challenge 2 - Replacing Blanks with Guesses - Wstawianie liter do listy z zakrytymi literami na podstawie innej listy (losowego słowa)

Day 8:
84. [Interactive Coding Exercise] Prime Number Checker - Określanie czy liczba jest liczbą pierwszą
85. Caesar Cipher Part 1 - Encryption - Przesuwanie tekstu o pewną wartość w alfabecie

Day 9:
Test 7: Python Dictionaries Quiz

Day 10: 
Test 8: Functions Quiz
103. Calculator Part 1: Combining Dictionaries and Functions - Używanie słownika do wywołania funkcji
104. Print vs. Return - Debuging problem
What is input and what is output?

Day 11:
Test and understand Angela's code
Blackjack project - Niuanse z Asem 

Day 14:
Test and understand Angela's code

Day 15:
enough_ingredients(): i ingredients_calc() próbowałem zrobić razem a niepotrzebnie
Test and understand Angela's code

Day 22:
Overcomplicated the paddle built and movement (unnesecary code from snake)
Didnt use class inheritance - super()

Day 23:
List in class
Speeding up cars

Day 25:
different method >if input in list(?)

Day 26:
Comprehensions are cool

Day 29:
Angela's solution with: if key in database is also intresting

Day 31:
nex_card() thing, also solution to not use global new_card but instead empty dictionary and append it to it

Day 32:
itterow in database, if in, randint(1,3),

Day 33: DEF COME BACK TO THIS ONE !
using functions that return true or false for satelite position and night time (which is actually better 
if uploaded to cloud because it actively checks location of satelite)

Day 36: 
Using dictionary to list comprehension to get items from the list from first two values

Day 39:
STEP 2: Watch out for overusing API requests.
Checks the first row if there is IATA code so we dont have to use up unnecesary requests
Watch out of having double loops containing requests cus it doubles
How to reduce amount of requests from API?
STEP 4 - VERY HARD

Day 46:
Very bad documentation

Day 48:
I had a bad day. Can improve:
-Ogarnac ilosc obecnych cookies; -Lista przedmiotow i ich obecnych cen; -Znalezienie ulepszeń na które nas stać;
-Zakup 1 najlepszego ulepszenia

Day 54:
Nested functions and decorators

Day 55:
Kind of messy with those advanced decorators (456 especially)

Day 56:
456 - intresting way to edit pre-build templates

Day 57:
Final project:
Angela's used post class init to fill parameters with id, title, subtitle, body etc. for blog posts
Requests the json then in the loop creates objects filling parameters from the class, objects are then put in list
In show_post creates a loop where if post id fits index of URL it will create requested post variable consisting of
relevant data

Day 58:
CSS Z-index
